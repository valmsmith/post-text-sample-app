//
//  PostMediaTableViewCtr.swift
//
//  PostMediaAppSample
//


import Foundation

import UIKit


class PostMediaTableViewCtr: UITableViewController, UITextFieldDelegate {
    
    
    
    var postsDatabaseClassNameG = "Posts"

    var postsArrayG = [AnyObject]()
    
    
    var postViewG:UIView!
    
    var postTextFieldG: UITextField!
    
    var postButtonG:UIButton!
    
    
    let screenSizeG: CGRect = UIScreen.mainScreen().bounds

    
    
    override func viewDidLoad() {
        super.viewDidLoad()

        
        self.setPostView()

        
    }
    
    
    func setPostView()
    {
    
        
        self.postViewG = UIView(frame:CGRectMake(0, 10, screenSizeG.width, 80))
        
        
        self.postTextFieldG = UITextField(frame: CGRectMake(10, 20, screenSizeG.width - 70, 60))
        
        self.postTextFieldG?.delegate = self
        
        self.postTextFieldG?.backgroundColor = UIColor(red:(0/255), green:(255/255), blue:(255/255), alpha:(50/100))
        
        self.postTextFieldG?.placeholder = "Express yourself"

        self.postTextFieldG?.clearsOnBeginEditing = true
        
        
        self.postButtonG = UIButton(frame: CGRectMake(screenSizeG.width - 70, 20, 70, 60))
        
        self.postButtonG?.addTarget(self, action: "postButton:", forControlEvents: UIControlEvents.TouchUpInside)

        self.postButtonG?.setTitle("Post", forState: UIControlState.Normal)
        
        self.postButtonG?.setTitleColor(UIColor.redColor(), forState: UIControlState.Normal)
        
        self.postButtonG?.titleLabel?.font = UIFont(name:"AvenirNext-Heavy", size:22)
        
        self.postButtonG?.titleLabel?.textAlignment = .Center
        
        self.postButtonG?.backgroundColor = UIColor.yellowColor()
    
        
    }
    
    
    override func viewDidAppear(animated: Bool) {
        
        
        super.viewDidAppear(animated)
        
        
        // Automatic cell height adjustment
        
        tableView.estimatedRowHeight = 68
        
        tableView.rowHeight = UITableViewAutomaticDimension
        
        
        self.getPosts()

        
    }
    
    
    override func numberOfSectionsInTableView(tableView: UITableView) -> Int
    {
        
        return 1
        
    }
    
    override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int
    {
        
        
        var postObjectsCount = self.postsArrayG.count
        
        var rowsInSection = [postObjectsCount
            
                            ]
        
        
        return rowsInSection[section]
        
    }
    
    
    override func tableView(tableView:UITableView, heightForHeaderInSection section:Int) -> CGFloat
    {

        return 100
        
    }
    
    
    override func tableView(tableView: UITableView, viewForHeaderInSection section: Int) -> UIView
    {
     
        
        var sectionTitleArray: [UIView]
        
        
        self.postViewG?.addSubview(self.postTextFieldG!)
        
        self.postViewG?.addSubview(self.postButtonG!)
        
        
        sectionTitleArray = [self.postViewG!]
    
        
        return sectionTitleArray[section] as UIView

        
    }
    
    
    override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell   {
        
        var section = indexPath.section
        
        
        switch (section)
        {
            
            case 0: return displayPostsCell(indexPath)
            
            case 1: return UITableViewCell()
            
            default: return UITableViewCell()
            
        }
    
    }
    
    
    func postButton(sender:UIButton!)
    {
        
        var newPostObject = PFObject(className: self.postsDatabaseClassNameG)
        
        var postText = self.postTextFieldG!.text
        

        newPostObject.setObject(postText, forKey:"posts")

        newPostObject.saveInBackgroundWithBlock { (Bool success, NSError error) in
            
            
            if (error != nil) {
                
                NSLog("error " + (error?.localizedDescription)!)
                
            }
            
            self.postsArrayG.insert(newPostObject, atIndex: 0)
            
            self.tableView.reloadData()
            
            
        }
        
        
    }
    
    func textFieldDidEndEditing(textField: UITextField) {
        
        
        self.postTextFieldG?.text = ""
        
        self.tableView.reloadData()
        
    }

    
    func getPosts()
    {
        
        var postsQuery = PFQuery(className:self.postsDatabaseClassNameG)
        
        postsQuery.orderByDescending("createdAt")

        
        postsQuery.findObjectsInBackgroundWithBlock({(NSArray objects, NSError error) in
            
            
            if (error != nil) {
                
                NSLog("error " + (error?.localizedDescription)!)
                
            }
            
                
            else {
                
                
                self.postsArrayG.removeAll()
                
                self.postsArrayG = objects!
                
                self.tableView.reloadData()
                
                
            }

        })
        
        
    }
    
    
    func displayPostsCell(indexPath:NSIndexPath)-> UITableViewCell
    {
        
        var cell = postCell(indexPath)
        
        var post = ""
        
        
        post = self.postsArrayG[indexPath.row].objectForKey("posts") as! String
        
        cell.textLabel?.text = post
        
        
        return cell
        
        
    }
    
    
    func postCell(indexPath:NSIndexPath) -> UITableViewCell
    {
        
        
        let cellIdentifier: String = "standardPostCell"
        
        let cell = UITableViewCell(style: .Default, reuseIdentifier: cellIdentifier)
        
        cell.textLabel?.numberOfLines = 0

        
        return cell
        
        
    }
    
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    
    }
    
    
}
